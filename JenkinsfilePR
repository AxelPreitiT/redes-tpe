def slackResponse
def slackBuild
def slackTest
pipeline {
    agent {
        dockerfile {
            filename 'Dockerfile'
        }
    }
    environment {
        JIRA_URL = 'https://redesjenkins.atlassian.net'
        JIRA_KEY = 'KAN'
        JIRA_ISSUE_TYPE_NAME = 'JenkinsPR'
        JIRA_CRED = credentials('jira-token')
    }
    stages {
        stage('Build') {
            steps {
                script {
                    slackResponse = slackSend (message: "Pipeline for Pull Request #$CHANGE_ID run. Review it on GitHub.")
                    slackInit.addReaction("stopwatch")
                    slackBuild = slackSend(channel: slackResponse.threadId, message: "Build stage")
                    sh '''curl -D- -u $JIRA_CRED -X POST --data '{ \"fields\": { \"project\": { \"key\": \"'$JIRA_KEY'\" }, \"summary\": \"Pull Request open: #'$CHANGE_ID'\", \"issuetype\": { \"name\": \"'$JIRA_ISSUE_TYPE_NAME'\" } } }' -H 'Content-Type: application/json' $JIRA_URL/rest/api/3/issue'''      
                }
                echo 'Building'
                sh 'npm install'
                sh 'npm run build'
            }
            post{
                success{
                    script {
                        slackBuild.addReaction("white_check_mark")
                    }
                }
                failure{
                    script {
                        slackInit.removeReaction("stopwatch")
                        slackBuild.addReaction("x")
                        slackResponse.addReaction("x")
                    }
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    slackTest = slackSend(channel: slackResponse.threadId, message: "Testing Pull Request")
                }
                echo 'Testing'
                echo 'With webhook'
                sh 'npm run dev > /dev/null 2>&1 & api_pid=$!'
                sh 'npm run test'
            }
            post {
                success {
                    script {
                        slackTest.addReaction("white_check_mark")
                        slackResponse.addReaction("white_check_mark")
                    }
                }
                failure {
                    script {
                        slackTest.addReaction("x")
                        slackResponse.addReaction("x")
                    }
                }
                always {
                    script {
                        slackInit.removeReaction("stopwatch")
                    }
                }
            }
        }
    }
}